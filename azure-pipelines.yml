parameters:
  - name: env
    displayName: 'Select Environment'
    type: string
    default: 'dev'
    values:
      - dev
      - staging
      - prod

  - name: runDestroy
    displayName: 'Run Destroy?'
    type: boolean
    default: false

trigger:
  branches:
    include:
      - "dev"

pool:
  name: Default
  demands: agent.name -equals Udeeks-MacBook-Air-2

pr:
  branches:
    include:
      - "main"

variables:
  SCRIPTS: 'scripts'   # your folder that has init.sh, plan.sh, apply.sh
  ENV: ${{ parameters.env }}

stages:
  - stage: ValidateAndPlan
    displayName: "Terraform Validate & Plan"
    jobs:
    - job: ValidateAndPlan
      displayName: Validate and Plan
      steps:
        - checkout: self
        - script: |
            chmod +x $(SCRIPTS)/init.sh
            chmod +x $(SCRIPTS)/plan.sh
            $(SCRIPTS)/init.sh $(ENV)
            terraform validate
            $(SCRIPTS)/plan.sh $(ENV)
          displayName: Run Init, Validate, and Plan
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: 'tfplan'
            ArtifactName: 'tfplan'
            publishLocation: 'Container'



# Optional future stage:
  - stage: Apply
    displayName: "Terraform Apply"
    dependsOn: ValidateAndPlan
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    jobs:
      - job: Apply
        displayName: "Terraform Apply"
        steps:
          - checkout: self

          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'tfplan'
              downloadPath: '$(Build.SourcesDirectory)/tfplan-download'
          - script: |
              terraform init -backend-config="environments/$(ENV)/backend.tf" -reconfigure
              terraform apply -auto-approve "$(Build.SourcesDirectory)/tfplan-download/tfplan/tfplan"
            displayName: Terraform Apply (Exact plan)
  
  - stage: Destroy
    displayName: 'Terraform Destroy'
    dependsOn: Apply
    condition: and(succeeded(), eq('${{ parameters.runDestroy }}', true))
    jobs:
    - job: Destroy
      displayName: 'Terraform Destroy Job'
      steps:
        - checkout: self
        - script: |
            chmod +x $(SCRIPTS)/destroy.sh
            terraform init -backend-config="environments/$(ENV)/backend.tf" -reconfigure
            $(SCRIPTS)/destroy.sh $(ENV)
          displayName: 'Terraform Destroy'